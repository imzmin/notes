//偏移尺寸：包含元素在屏幕上占用的所有视觉空间，元素在页面上的视觉空间由其高度和宽度决定，包括所有内边距、滚动条和边框（但不包含外边框）
//以下4个属性用于取得元素的偏移尺寸：
// offsetHeight:元素在垂直方向上占用的像素尺寸，包括它的高度、水平滚动条高度（如果可见）和上下边框的高度
// （内容+上下内边距+上下边框）
// offsetWidth:元素在水平方向上占用的像素尺寸，包括它的宽度、垂直滚动条宽度（如果可见）和左右边框的宽度
// （内容+左右内边距+左右边框）
// offsetTop:元素上边框外侧距离包含元素上边框内侧的像素数（从上外边框开始，不包括边框宽度）
// offsetLeft:元素左边框外侧距离包含元素左边框内侧的像素数（从做外边框开始，不包括边框宽度）
// 偏移尺寸是只读的，而且每次访问都会重新计算
// offsetTop和offsetLeft是相对于包含元素的
//要确定一个元素在页面中的偏移量，可以把它的offsetLeft和offsetTop属性分别于offsetParent的相同属性相加，一直加到根元素


//客户端尺存：包含元素内容及其内边距所占用的空间
//客户端尺寸实际上就是元素内部的空间，因此不包含滚动条占有的空间
//客户端尺寸只有两个尺寸:
// clientWidth:是内容区宽度加左右内边距宽度（内容+左右内边距，没有边框）
// clientHeight：是内容区高度加上下内边距高度（内容+上下内边距，没有边框）
//这两个属性最常用于确定浏览器视口尺寸，即检测document.documentElement的clientWidth和clientHeight
//这两个表示视口的尺寸（<html>或者<body>）
//客户端尺寸也是只读的，而且每次访问都会重新计算



//滚动尺寸：元素内容滚动距离的信息，有些元素比如<html>无须任何代码就可以自动滚动，其他元素则需要使用overflow属性令其滚动(必须加上)
// 相关的属性有4个：
// scrollHeight:没有滚动条出现时，元素内容的总高度
// scrollWidth:没有滚动条出现时，元素内容的总高度
// scrollTop:内容区顶部隐藏的像素数，设置这个属性可以改变元素的滚动位置，
//如果scrollTop大于0，表示元素顶部不可见区域宽度
// scrollLeft:内容区左侧隐藏的像素数，设置这个属性可以改变元素的滚动位置
//如果scrollLeft大于0，表示元素左侧不可见区域宽度
// scrollHeight和scrollWidth可以用来确定给定元素内容的实际尺寸
// 例如：<html>元素是浏览器中滚动视口的元素，因此document.documentElement.scrollHeight就是整个垂直方向的总高度
// scrollTop和scrollLeft可以用来确定当前元素滚动的距离

//一般用于监测网页滚动的距离
document.onscroll=function () {
    console.log(document.documentElement.scrollTop)
}

